from django.shortcuts import render
from django.http import HttpResponse
from django.contrib import messages
from .models import Rooms
from .forms import addForm
import datetime as dt
from django.shortcuts import redirect
import pandas as pd
import requests
from bs4 import BeautifulSoup
from selenium import webdriver
import time
from django.db import IntegrityError
from django.db.models import Q
import random
PROXY = "157.230.163.114:5000"
array= ["163.172.137.27:3128","212.47.231.33:3128","51.158.68.133:8811","163.172.151.172:3128","49.51.155.45:8081","163.172.189.113:3128","163.172.171.181:3128","51.158.123.35:8811","51.15.195.99:3128","163.172.188.9:3128","51.15.198.91:3128","46.101.111.0:3128","173.199.71.126:32762","51.15.195.156:3128","51.158.119.88:8811","163.172.148.169:3128","163.172.184.71:3128","163.172.182.105:3128","51.15.196.230:3128","163.172.190.87:3128","163.172.155.124:3128","51.158.78.179:8811","163.172.171.163:3128","5.150.100.63:8080","163.172.184.189:3128","51.158.98.121:8811","163.172.187.113:3128","163.172.176.189:3128","51.15.128.178:3128","163.172.182.35:3128","45.32.151.216:31281","173.249.35.163:1448","163.172.185.248:3128","163.172.185.175:3128","163.172.178.133:3128","173.249.35.163:10010","51.15.128.148:3128","163.172.141.62:3128","51.15.199.152:3128","163.172.183.160:3128","163.172.170.92:3128","5.135.175.136:8080","87.190.23.65:3128","165.22.25.49:3128","5.135.175.136:80","51.158.119.4:8811","37.59.80.69:8082","149.202.41.191:3128","163.172.188.185:3128","51.158.106.54:8811","163.172.187.34:3128","51.15.141.235:3128","163.172.136.223:3128","51.158.111.229:8811","207.154.200.199:3128","163.172.182.121:3128","163.172.182.103:3128","138.68.93.249:80","167.99.212.110:8118","68.183.216.78:8080","209.97.131.118:8080","212.47.233.30:3128","217.119.171.126:36090","84.208.9.128:80","84.208.9.129:80","84.208.9.130:80","84.208.9.131:80","173.212.215.177:8080","77.242.234.95:41258","185.126.229.202:3128","134.209.195.94:8080","163.172.181.52:3128","195.122.185.95:3128","51.15.139.253:3128","194.167.44.91:80","207.180.226.111:3128","51.179.181.230:8080","84.195.180.164:3128","89.191.196.42:80","213.23.122.170:83","95.141.36.112:8686","163.172.165.23:3128","77.236.207.157:44919","138.201.223.250:31288","81.201.49.138:8080","80.152.210.221:3128","93.99.104.121:80","81.23.32.47:443","185.142.208.160:53494","93.190.137.184:3128","193.150.39.150:8080","80.211.91.251:8080","93.125.121.98:8081","93.99.104.121:8080","80.209.229.76:80","185.25.48.215:55960","93.99.104.121:3128","46.246.17.5:8118","80.211.179.20:8080","85.43.127.116:80","87.106.84.248:3128","51.158.111.242:8811","80.238.125.201:41258","95.216.23.163:80","109.168.18.50:8080","212.237.5.164:8080","185.94.218.57:43403","92.242.240.34:53035","188.255.182.218:44835","84.38.96.169:53584","80.211.2.156:80","212.47.235.197:3128","91.214.70.99:3128","94.244.191.219:3128","212.237.57.103:8080","185.97.252.54:3128","90.183.7.151:3128","89.140.125.17:80","51.158.108.135:8811","95.213.187.93:3128","80.211.2.156:3128","91.209.11.132:80","51.38.2.224:8080","78.60.130.181:48984","91.205.218.32:80","212.90.169.173:8081","82.202.177.46:36121","83.219.230.11:80","185.22.174.65:1448","109.71.181.170:53983","185.22.174.65:10010","83.219.230.12:80","94.242.58.142:10010","94.242.59.135:1448","84.1.63.193:8080","109.196.82.214:46950","109.74.61.240:32231","185.22.174.69:10010","52.47.173.29:80","185.22.174.69:1448","151.237.130.210:53668","195.238.85.215:50948","94.242.59.135:10010","84.52.74.194:8080","188.130.240.221:45787","94.242.58.108:10010","192.203.80.148:8080","217.174.184.234:8081","138.68.107.34:80","213.81.144.253:9999","37.110.63.6:3128","62.33.207.201:80","77.238.234.145:8081","91.218.46.86:8080","62.33.207.202:80","195.80.140.212:8081","82.114.92.33:8080","128.140.225.41:80","81.5.103.14:8081","185.226.65.188:3128","37.59.158.104:3128","81.144.230.119:3128","193.194.85.85:80","51.158.113.142:8811","85.26.146.169:80","188.32.48.236:8081","185.226.65.188:8080","37.110.74.230:8181","176.62.182.29:58350","38.98.110.3:8080","217.9.94.31:8080","5.135.213.214:8080","94.230.159.81:48086","46.98.201.37:8080","91.142.174.224:49966","185.51.63.234:59181","176.105.100.62:3128","62.182.114.164:58129","81.177.141.120:3128","78.26.172.44:32246","31.28.0.204:8080","62.33.207.196:3128","89.255.83.199:58895","87.116.201.80:8080","194.8.71.9:8080","79.98.212.14:3128","185.217.90.136:80","87.249.22.114:8080","80.92.224.43:80","94.242.58.142:1448","178.140.61.157:8081","91.200.166.200:3128","37.123.246.13:41258","185.217.90.141:80","185.217.90.138:80","62.33.207.196:80","185.217.90.142:80","51.15.137.62:3128","94.242.58.14:1448","213.208.169.253:3128","185.100.15.48:41258","46.239.40.143:8080","178.62.198.77:8080","158.58.197.227:51481","5.61.26.254:80","217.15.195.141:59792","46.231.224.14:30222","188.128.87.218:8080","213.177.0.98:3128","83.144.123.154:8080","84.1.116.130:8080","62.215.224.45:80","109.106.139.225:45689","185.226.65.221:80","51.83.53.227:3128","95.158.7.234:56234","185.79.243.137:48488","94.242.57.136:1448","145.239.92.89:3128","5.58.131.2:60254","80.78.79.96:8080","193.86.23.24:8080","92.247.148.126:8080","94.242.58.14:10010","188.6.197.119:41031","84.42.53.44:8080","78.83.199.235:53281","176.195.172.225:40627","176.63.149.61:31286","51.158.99.51:8811","185.58.127.232:8080","85.234.6.194:8081","94.230.35.70:52644","77.79.154.153:8081","195.211.30.115:54675","83.169.244.38:8080","94.231.124.252:8080","62.73.127.10:37790","178.115.242.199:8080","212.24.148.234:36197","185.148.220.11:8081","178.218.20.107:8080","77.229.174.131:8080","84.18.100.238:8080","212.56.203.114:42645","188.165.138.181:80","94.242.55.108:1448","193.109.40.19:33505","85.113.38.162:53281","176.56.23.14:35340","95.167.177.18:8080","94.236.198.160:33822","84.47.174.197:8080","46.158.168.140:8080","31.23.232.209:3128","95.134.195.78:48578","78.138.159.181:3128","212.237.22.43:8080","80.68.5.234:8080","62.99.178.46:59679","81.218.46.68:3128","81.23.122.178:54082","82.114.241.138:8080","89.110.53.149:37231","165.22.114.4:8080","77.242.105.158:80","46.63.162.171:8080","88.87.85.220:60841","31.3.90.177:56039","195.91.128.107:42538","158.58.133.41:37239","94.242.55.108:10010","46.236.163.205:45137","188.138.247.108:443","91.213.119.246:31551","91.206.148.243:56785","158.58.131.27:43733","37.29.116.46:8080","178.176.60.215:8080","213.178.38.246:34214","46.23.200.30:41258","192.241.151.164:8080","95.88.192.108:3128","142.93.207.141:8090","80.240.252.237:58686","165.22.178.128:8118","162.243.173.67:8080","142.93.124.90:3128","207.246.127.163:3128","62.76.5.157:41156","162.243.173.91:8080","142.93.207.141:8080","79.101.55.162:53281","104.248.51.47:8080","95.31.22.157:50964","176.120.209.82:8081","81.163.38.60:8081","95.71.247.40:8081","142.93.59.240:8080","165.22.41.92:80","168.235.88.16:8080","104.248.115.236:3128","195.182.135.237:3128","68.183.111.90:80","68.183.100.171:80","5.128.73.158:8081","35.194.90.140:80","140.82.15.129:32166","145.239.169.42:8080","192.34.63.47:8080","159.203.186.40:8080","68.183.99.96:8080","68.183.24.193:8090","67.205.171.99:8080","198.211.108.93:8080","68.183.24.193:8080","198.199.68.196:8080","142.93.207.141:21","165.227.105.81:3128","159.203.87.130:3128","149.28.232.144:80","35.203.98.14:80","68.232.175.189:8080","66.70.167.117:3128","68.183.99.96:3128","54.39.53.104:3128","62.33.207.197:3128","71.191.75.67:3128","149.56.133.165:3128","104.248.115.236:80","149.56.133.165:80","165.227.67.222:3128","198.27.67.35:3128","198.199.65.21:8080","192.99.154.47:80","192.241.136.113:8080","91.105.135.181:8081","5.160.218.71:3128","149.56.99.222:80","67.205.159.49:3128","66.70.188.148:3128"]

def homepage(request):
    query = request.GET.get("q", None)
    qs = Rooms.objects.all()
    if query is not None and query is not "":
        qs = qs.filter(Q(room_name__icontains=query))
    return render(request = request,
                template_name = "volai/home.html",
                context= {"roomss": qs})

def add(request):
    PROXY = str(random.choice(array))
    if request.method == "POST":
        form = addForm(request.POST)
        if form.is_valid():
            post = form.save(commit=False)
            post.room_adress = "http://volafile.org/r/" + post.room_adress
            post.room_add = dt.datetime.now()
            chrome_path = r"/usr/bin/chromedriver"
            options = webdriver.ChromeOptions()
            options.add_argument('headless')
            options.add_argument('window-size=1920x1080')
            options.add_argument("--incognito")
            options.add_argument('--proxy-server=http://%s' % PROXY)
            driver = webdriver.Chrome(chrome_path, chrome_options=options)
            driver.implicitly_wait(3)
            driver.get(post.room_adress)

            try:
                time.sleep(10)
                name = driver.find_element_by_id('room_name').text
                post.room_name = name
                if driver.find_elements_by_link_text('front page'):
                    driver.close()
                    messages.error(request, "The room is closed")
                    return render(request = request,
                                template_name = "volai/add.html",
                                context= {"form": form})
                else:


                    try:
                        passw = driver.find_elements_by_name('password')
                        passw[0].send_keys(post.room_pass)
                        botao = driver.find_elements_by_class_name("button")
                        botao[1].click()
                        time.sleep(3)
                        passw = driver.find_elements_by_name('password')
                        if len(passw) > 0:
                            driver.close()
                            messages.error(request, "Wrong Password")
                            return render(request = request,
                                        template_name = "volai/add.html",
                                        context= {"form": form})
                            time.sleep(5)
                        try:
                            quant= driver.find_element_by_class_name("chat_text").find_element_by_tag_name('strong')
                            post.room_viewers = quant.text
                        except:
                            post.room_viewers = 0
                        post.save()
                        driver.close()
                    except:
                        post.room_pass = ""
                        pass

            except:
                driver.close()
                messages.error(request, "The room doesn't exist")
                return render(request = request,
                            template_name = "volai/add.html",
                            context= {"form": form})
            try:
                quant= driver.find_element_by_class_name("chat_text").find_element_by_tag_name('strong')
                post.room_viewers = quant.text
            except:
                post.room_viewers = 0

            try:
                post.save()
            except IntegrityError:
                messages.error(request, "The room is already in our database")
                return render(request = request,
                            template_name = "volai/add.html",
                            context= {"form": form})

            return redirect("/")

    else:
        form = addForm()
    return render(request = request,
                template_name = "volai/add.html",
                context= {"form": form})

# Create your views here.
from datatableview.views import DatatableView
class ZeroConfigurationDatatableView(DatatableView):
    model = Rooms
